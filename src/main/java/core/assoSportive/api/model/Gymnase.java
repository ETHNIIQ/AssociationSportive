package core.assoSportive.api.model;

import lombok.*;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;

import java.util.List;

//@Setter
//@Getter
//@AllArgsConstructor
//@NoArgsConstructor


@Data //getter setter constructor
@Document("Gymnases") //link avec la collection dans la base de données
public class Gymnase {

    @Id
    private String _id; //Identifiant par défaut
//    @Indexed(unique = true) //WARNING si j'utilise l'indexed unique =true et je cherche dans la base de données et qu'il y a des valeur double => many nested errors
    private int IdGymnase;
    private int Surface;
    @Field("Ville")
    private String ville;
    @Field("Adresse") //   @Field in order to don't have to match the name from DB and in my java classe use this annotation
    private String adressegymnase;
//    @Indexed(unique = true) // PB: already in DB two times same gymnase name ....To not insert two times the same gymnases name
    private String NomGymnase;
    @Field("Seances")
    private List<Seance> seances;

//    Constructor without Id because it's autogenerated
//    PB with the field mapping exception cf-main --> solution using this to point class attribute and giving the same field name to the constructor
    public Gymnase(int IdGymnase, int Surface, String ville, String adressegymnase, String NomGymnase, List<Seance> seances) {
        this.IdGymnase = IdGymnase;
        this.Surface = Surface;
        this.ville = ville;
        this.adressegymnase = adressegymnase;
        this.NomGymnase = NomGymnase;
        this.seances = seances;
    }
}
